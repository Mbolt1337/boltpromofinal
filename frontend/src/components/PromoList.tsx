import { getPromocodes, getStores } from '@/lib/api'
import PromoCard from './PromoCard'
import PromoCarouselMobile from './PromoCarouselMobile'
import { ArrowRight, Tag, Store, Grid3X3, Zap, Users, ShoppingBag, CreditCard, Gift, Percent, Copy } from 'lucide-react'
import Link from 'next/link'
import SectionContainer from '@/components/ui/SectionContainer'
import SectionHeader from '@/components/ui/SectionHeader'

interface PromoListProps {
  limit?: number
  showHeader?: boolean
  showActions?: boolean
  showStats?: boolean
  offerType?: 'coupon' | 'deal' | 'financial' | 'cashback'
}

// üöÄ –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–Ø: –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –≤—ã–Ω–µ—Å–µ–Ω—ã –Ω–∞—Ä—É–∂—É –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
const OFFER_TYPE_LABELS = {
  coupon: '–ü—Ä–æ–º–æ–∫–æ–¥—ã',
  deal: '–°–∫–∏–¥–∫–∏', 
  financial: '–§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ —É—Å–ª—É–≥–∏',
  cashback: '–ö—ç—à–±—ç–∫ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è'
} as const

// üöÄ –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–Ø: –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–∏—Ö –∫–∞—Ä—Ç–æ—á–µ–∫
const STATS_CONFIG = [
  {
    key: 'offers',
    icon: ShoppingBag,
    label: '–ê–∫—Ç–∏–≤–Ω—ã—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π',
    gradient: 'from-green-500/3 to-emerald-500/3',
    hoverColor: 'group-hover:text-green-300',
    iconHoverColor: 'group-hover:text-green-300'
  },
  {
    key: 'promocodes', 
    icon: Copy,
    label: '–ü—Ä–æ–º–æ–∫–æ–¥–æ–≤',
    gradient: 'from-blue-500/3 to-cyan-500/3',
    hoverColor: 'group-hover:text-blue-300',
    iconHoverColor: 'group-hover:text-blue-300'
  },
  {
    key: 'stores',
    icon: Users, 
    label: '–ú–∞–≥–∞–∑–∏–Ω–æ–≤-–ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤',
    gradient: 'from-purple-500/3 to-violet-500/3',
    hoverColor: 'group-hover:text-purple-300',
    iconHoverColor: 'group-hover:text-purple-300'
  }
] as const

// üöÄ –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–Ø: –°—Ç–∏–ª–∏ –∫–Ω–æ–ø–æ–∫ –¥–µ–π—Å—Ç–≤–∏–π
const ACTION_BUTTON_CLASSES = "inline-flex items-center px-8 py-4 rounded-xl font-semibold text-white transition-all duration-300 ease-out bg-white/8 hover:bg-white/12 border border-white/15 hover:border-white/25 hover:scale-105 group shadow-lg hover:shadow-2xl focus-visible:ring-2 focus-visible:ring-white/20 focus-visible:outline-none"

// üöÄ –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–Ø: –°—Ç–∏–ª–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–∏—Ö –∫–∞—Ä—Ç–æ—á–µ–∫
const STATS_CARD_CLASSES = "glass-card p-8 text-center hover:scale-[1.02] hover:shadow-2xl transition-all duration-300 ease-out group relative overflow-hidden cursor-pointer focus-visible:ring-2 focus-visible:ring-white/20 focus-visible:outline-none"

// Skeleton –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤
function PromoListSkeleton({ count = 6 }: { count?: number }) {
  return (
    <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
      {[...Array(count)].map((_, index) => (
        <div key={index} className="glass-card p-6 animate-shimmer h-[420px]">
          <div className="flex items-center space-x-3 mb-4">
            <div className="w-12 h-12 bg-white/10 rounded-xl"></div>
            <div className="flex-1">
              <div className="h-5 bg-white/10 rounded w-24 mb-2"></div>
              <div className="h-4 bg-white/10 rounded w-20"></div>
            </div>
          </div>
          <div className="h-6 bg-white/10 rounded w-full mb-3"></div>
          <div className="h-4 bg-white/10 rounded w-2/3 mb-4"></div>
          <div className="space-y-3 mt-auto">
            <div className="h-12 bg-white/10 rounded w-full"></div>
            <div className="h-10 bg-white/10 rounded w-full"></div>
          </div>
        </div>
      ))}
    </div>
  )
}

// üöÄ –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–Ø: –ö–æ–º–ø–æ–Ω–µ–Ω—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–æ–π –∫–∞—Ä—Ç–æ—á–∫–∏
function StatCard({ config, value }: { config: typeof STATS_CONFIG[number], value: number }) {
  const Icon = config.icon
  
  return (
    <div className={STATS_CARD_CLASSES} tabIndex={0}>
      <div className="relative z-10">
        <div className="w-16 h-16 mx-auto mb-4 rounded-2xl bg-white/5 border border-white/10 flex items-center justify-center group-hover:scale-110 group-hover:bg-white/10 group-hover:border-white/20 transition-all duration-300 ease-out">
          <Icon className={`w-8 h-8 text-white ${config.iconHoverColor} transition-colors duration-300 ease-out`} />
        </div>
        <div className={`text-3xl font-bold text-white mb-2 ${config.hoverColor} transition-colors duration-300 ease-out`}>
          {value.toLocaleString()}
        </div>
        <div className="text-gray-400 text-sm group-hover:text-gray-300 transition-colors duration-300 ease-out">
          {config.label}
        </div>
      </div>
      <div className={`absolute inset-0 bg-gradient-to-br ${config.gradient} opacity-0 group-hover:opacity-100 transition-opacity duration-300 ease-out`}></div>
    </div>
  )
}

// üöÄ –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–Ø: –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –ø—É—Å—Ç–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
function EmptyState({ offerType, showHeader }: { offerType?: string, showHeader: boolean }) {
  const title = offerType ? OFFER_TYPE_LABELS[offerType as keyof typeof OFFER_TYPE_LABELS] : '–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –ø—Ä–æ–º–æ–∫–æ–¥—ã'
  const description = offerType
    ? `–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è —Ç–∏–ø–∞ "${OFFER_TYPE_LABELS[offerType as keyof typeof OFFER_TYPE_LABELS]}" —Å–∫–æ—Ä–æ –ø–æ—è–≤—è—Ç—Å—è`
    : '–õ—É—á—à–∏–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è —Å–∫–æ—Ä–æ –ø–æ—è–≤—è—Ç—Å—è'

  const content = (
    <>
      {showHeader && (
        <SectionHeader title={title} subtitle={description} align="center" />
      )}

      <div className="glass-card p-12 text-center">
        <Tag className="w-16 h-16 text-gray-400 mx-auto mb-4 transition-transform duration-300 ease-out hover:scale-110" />
        <h3 className="text-2xl font-semibold text-white mb-4">
          –ü—Ä–æ–º–æ–∫–æ–¥—ã –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è...
        </h3>
        <p className="text-gray-400">
          –ê–∫—Ç—É–∞–ª—å–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –±—É–¥—É—Ç –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è
        </p>
      </div>
    </>
  )

  return showHeader ? <SectionContainer>{content}</SectionContainer> : content
}

// üöÄ –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–Ø: –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –∫–Ω–æ–ø–æ–∫ –¥–µ–π—Å—Ç–≤–∏–π
function ActionButtons() {
  return (
    <div className="flex flex-col sm:flex-row items-center justify-center gap-4 mb-16">
      <Link href="/stores" className={ACTION_BUTTON_CLASSES}>
        <Store className="w-5 h-5 mr-3 group-hover:scale-110 transition-transform duration-300 ease-out" />
        <span>–ü–µ—Ä–µ–π—Ç–∏ –≤ –º–∞–≥–∞–∑–∏–Ω—ã</span>
        <ArrowRight className="w-5 h-5 ml-3 group-hover:translate-x-1 transition-transform duration-300 ease-out" />
      </Link>

      <Link href="/categories" className={ACTION_BUTTON_CLASSES}>
        <Grid3X3 className="w-5 h-5 mr-3 group-hover:scale-110 transition-transform duration-300 ease-out" />
        <span>–ü–µ—Ä–µ–π—Ç–∏ –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏</span>
        <ArrowRight className="w-5 h-5 ml-3 group-hover:translate-x-1 transition-transform duration-300 ease-out" />
      </Link>
    </div>
  )
}

export { PromoListSkeleton }

export default async function PromoList({ 
  limit = 6, 
  showHeader = true,
  showActions = true,
  showStats = true,
  offerType
}: PromoListProps) {
  try {
    // üöÄ –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–Ø: –ü–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
    const [promoResponse, storesResponse] = await Promise.all([
      getPromocodes({
        limit,
        offer_type: offerType,
        ordering: '-is_recommended,-views_count'
      }),
      showStats ? getStores({ page_size: 100 }) : Promise.resolve({ count: 0, results: [] })
    ])

    const promos = promoResponse.results
    const stores = storesResponse.results || []

    if (promos.length === 0) {
      return <EmptyState offerType={offerType} showHeader={showHeader} />
    }

    // üöÄ –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–Ø: –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ –≤—ã—á–∏—Å–ª—è–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    const statsValues = {
      offers: promoResponse.count,
      promocodes: promoResponse.count, 
      stores: storesResponse.count
    }

    // üöÄ –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–Ø: –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
    const headerTitle = offerType 
      ? OFFER_TYPE_LABELS[offerType as keyof typeof OFFER_TYPE_LABELS] 
      : '–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –ø—Ä–æ–º–æ–∫–æ–¥—ã'
      
    const headerDescription = offerType 
      ? `–õ—É—á—à–∏–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è —Ç–∏–ø–∞ "${OFFER_TYPE_LABELS[offerType as keyof typeof OFFER_TYPE_LABELS]}"`
      : '–õ—É—á—à–∏–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –æ—Ç –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã—Ö –º–∞–≥–∞–∑–∏–Ω–æ–≤'

    const content = (
      <>
        {showHeader && (
          <SectionHeader title={headerTitle} subtitle={headerDescription} align="center" />
        )}

        {/* –ú–æ–±–∏–ª—å–Ω–∞—è –∫–∞—Ä—É—Å–µ–ª—å –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤ */}
        <PromoCarouselMobile promos={promos} />

        {/* üöÄ –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–Ø: –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π (–º–æ–±–∏–ª–∫–∞ - –ø–æ—Å–ª–µ –∫–∞—Ä—É—Å–µ–ª–∏) */}
        {showActions && (
          <div className="md:hidden">
            <ActionButtons />
          </div>
        )}

        {/* üöÄ –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–Ø: –°–µ—Ç–∫–∞ –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤ (–¥–µ—Å–∫—Ç–æ–ø) */}
        <div className="hidden md:grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 mb-12">
          {promos.map((promo) => (
            <PromoCard key={promo.id} promo={promo} />
          ))}
        </div>

        {/* üöÄ –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–Ø: –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π (–¥–µ—Å–∫—Ç–æ–ø - –ø–æ—Å–ª–µ grid) */}
        {showActions && (
          <div className="hidden md:block">
            <ActionButtons />
          </div>
        )}

        {/* üöÄ –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–Ø: –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å –ø–µ—Ä–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–º–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º–∏ */}
        {showStats && (
          <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6">
            {STATS_CONFIG.map((config, index) => (
              <StatCard
                key={config.key}
                config={config}
                value={statsValues[config.key as keyof typeof statsValues]}
              />
            ))}
          </div>
        )}
      </>
    )

    return showHeader ? <SectionContainer>{content}</SectionContainer> : content
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤:', error)

    const errorContent = (
      <>
        {showHeader && (
          <SectionHeader
            title="–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –ø—Ä–æ–º–æ–∫–æ–¥—ã"
            subtitle="–í—Ä–µ–º–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã —Å –∑–∞–≥—Ä—É–∑–∫–æ–π"
            align="center"
          />
        )}

        <div className="glass-card p-12 text-center">
          <Tag className="w-16 h-16 text-gray-400 mx-auto mb-4 transition-transform duration-300 ease-out hover:scale-110" />
          <h3 className="text-2xl font-semibold text-white mb-4">
            –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏
          </h3>
          <p className="text-gray-400">
            –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–µ—Ä—É
          </p>
        </div>
      </>
    )

    return showHeader ? <SectionContainer>{errorContent}</SectionContainer> : errorContent
  }
}