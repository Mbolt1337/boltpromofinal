# ===========================================
# BoltPromo Nginx Configuration
# ===========================================
# Production-ready configuration with security headers,
# caching, compression, and SSL best practices

# Upstream backend (Gunicorn)
upstream backend_api {
    server unix:/run/gunicorn.sock fail_timeout=0;
}

# Rate limiting zones
limit_req_zone $binary_remote_addr zone=api_limit:10m rate=30r/s;
limit_req_zone $binary_remote_addr zone=general_limit:10m rate=10r/s;

# Redirect HTTP to HTTPS (Port 80)
server {
    listen 80;
    listen [::]:80;
    server_name yourdomain.ru www.yourdomain.ru api.yourdomain.ru;

    # Allow Let's Encrypt challenges
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    # Redirect all other traffic to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

# ===========================================
# Backend API Server (HTTPS)
# ===========================================
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name api.yourdomain.ru;

    # SSL Configuration
    ssl_certificate /etc/letsencrypt/live/api.yourdomain.ru/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/api.yourdomain.ru/privkey.pem;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;

    # Modern SSL configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;

    # OCSP stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    ssl_trusted_certificate /etc/letsencrypt/live/api.yourdomain.ru/chain.pem;

    # Security Headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # Logging
    access_log /var/log/nginx/boltpromo-api-access.log combined;
    error_log /var/log/nginx/boltpromo-api-error.log warn;

    # Max upload size (for media uploads)
    client_max_body_size 10M;

    # Timeouts
    proxy_connect_timeout 60s;
    proxy_send_timeout 60s;
    proxy_read_timeout 60s;

    # Static files
    location /static/ {
        alias /var/www/boltpromo/backend/staticfiles/;
        expires 30d;
        add_header Cache-Control "public, immutable";
        add_header Vary "Accept-Encoding";

        # Gzip compression
        gzip on;
        gzip_vary on;
        gzip_types text/css application/javascript image/svg+xml;
        gzip_min_length 1024;
    }

    # Media files
    location /media/ {
        alias /var/www/boltpromo/backend/media/;
        expires 7d;
        add_header Cache-Control "public";
        add_header Vary "Accept-Encoding";

        # Security: prevent script execution
        location ~* \.(php|py|sh|bash)$ {
            deny all;
        }
    }

    # Admin panel (rate limited)
    location /admin/ {
        limit_req zone=general_limit burst=10 nodelay;

        proxy_pass http://backend_api;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_redirect off;
    }

    # API endpoints (rate limited)
    location /api/ {
        limit_req zone=api_limit burst=50 nodelay;

        proxy_pass http://backend_api;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_redirect off;

        # CORS headers (handled by Django, but backup)
        add_header Access-Control-Allow-Origin "https://yourdomain.ru" always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Content-Type, Authorization" always;
        add_header Access-Control-Allow-Credentials "true" always;
    }

    # Health check endpoint (no rate limit)
    location /health/ {
        proxy_pass http://backend_api;
        access_log off;
    }

    # All other Django routes
    location / {
        proxy_pass http://backend_api;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_redirect off;
    }
}

# ===========================================
# Frontend Server (HTTPS)
# ===========================================
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name yourdomain.ru www.yourdomain.ru;

    # SSL Configuration
    ssl_certificate /etc/letsencrypt/live/yourdomain.ru/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/yourdomain.ru/privkey.pem;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;

    # Modern SSL configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;

    # OCSP stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    ssl_trusted_certificate /etc/letsencrypt/live/yourdomain.ru/chain.pem;

    # Security Headers (CSP handled by backend middleware)
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # Logging
    access_log /var/log/nginx/boltpromo-frontend-access.log combined;
    error_log /var/log/nginx/boltpromo-frontend-error.log warn;

    # Redirect www to non-www (optional)
    if ($host = www.yourdomain.ru) {
        return 301 https://yourdomain.ru$request_uri;
    }

    # Next.js static files (built assets)
    location /_next/static/ {
        proxy_pass http://localhost:3000;
        proxy_cache_valid 200 60m;
        expires 365d;
        add_header Cache-Control "public, immutable";
    }

    # Next.js public files
    location /images/ {
        proxy_pass http://localhost:3000;
        expires 7d;
        add_header Cache-Control "public";
    }

    # Robots and sitemap
    location ~ ^/(robots\.txt|sitemap\.xml)$ {
        proxy_pass http://localhost:3000;
        expires 1d;
        add_header Cache-Control "public";
    }

    # All other routes (Next.js SSR)
    location / {
        proxy_pass http://localhost:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        proxy_redirect off;

        # Timeouts for SSR
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }
}
