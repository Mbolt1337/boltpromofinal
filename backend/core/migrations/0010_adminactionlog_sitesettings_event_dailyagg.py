# Generated by Django 4.2.17 on 2025-10-01 07:22

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0009_showcase_alter_promocode_options_alter_partner_order_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='AdminActionLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.CharField(max_length=150, verbose_name='Пользователь')),
                ('action', models.CharField(max_length=100, verbose_name='Действие')),
                ('details', models.TextField(blank=True, default='', verbose_name='Детали')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата')),
            ],
            options={
                'verbose_name': 'Лог действий админа',
                'verbose_name_plural': 'Логи действий админов',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SiteSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('singleton_id', models.PositiveSmallIntegerField(default=1, editable=False, unique=True)),
                ('maintenance_enabled', models.BooleanField(default=False, verbose_name='Включить режим техработ')),
                ('maintenance_message', models.TextField(blank=True, default='', verbose_name='Сообщение пользователю')),
                ('maintenance_expected_end', models.DateTimeField(blank=True, null=True, verbose_name='Ожидаемое завершение работ')),
                ('maintenance_telegram_url', models.URLField(blank=True, default='', verbose_name='Ссылка на Telegram')),
                ('maintenance_ip_whitelist', models.JSONField(blank=True, default=list, verbose_name='Белый список IP')),
                ('canonical_host', models.CharField(blank=True, default='', max_length=255, verbose_name='Канонический домен (пример: boltpromo.ru)')),
                ('robots_txt', models.TextField(blank=True, default='', verbose_name='robots.txt (кастом)')),
                ('noindex_expired_promos', models.BooleanField(default=True, verbose_name='noindex для просроченных промо')),
                ('allow_admin_cache_flush', models.BooleanField(default=True, verbose_name='Разрешить сброс кэша из админки')),
            ],
            options={
                'verbose_name': 'Настройки сайта',
                'verbose_name_plural': 'Настройки сайта',
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('event_type', models.CharField(db_index=True, max_length=40, verbose_name='Тип события')),
                ('session_id', models.CharField(blank=True, default='', max_length=64, verbose_name='ID сессии')),
                ('client_ip', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP')),
                ('user_agent', models.TextField(blank=True, default='', verbose_name='User Agent')),
                ('ref', models.CharField(blank=True, default='', max_length=100, verbose_name='Реферер')),
                ('utm_source', models.CharField(blank=True, default='', max_length=100, verbose_name='UTM Source')),
                ('utm_medium', models.CharField(blank=True, default='', max_length=100, verbose_name='UTM Medium')),
                ('utm_campaign', models.CharField(blank=True, default='', max_length=100, verbose_name='UTM Campaign')),
                ('is_unique', models.BooleanField(default=False, verbose_name='Уникальное')),
                ('promo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.promocode', verbose_name='Промокод')),
                ('showcase', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.showcase', verbose_name='Витрина')),
                ('store', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.store', verbose_name='Магазин')),
            ],
            options={
                'verbose_name': 'Событие',
                'verbose_name_plural': 'События',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['event_type', 'created_at'], name='core_event_event_t_0f2b1b_idx'), models.Index(fields=['promo', 'event_type'], name='core_event_promo_i_2937fb_idx'), models.Index(fields=['store', 'event_type'], name='core_event_store_i_b0fba7_idx')],
            },
        ),
        migrations.CreateModel(
            name='DailyAgg',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(db_index=True, verbose_name='Дата')),
                ('event_type', models.CharField(db_index=True, max_length=40, verbose_name='Тип события')),
                ('count', models.PositiveIntegerField(default=0, verbose_name='Количество')),
                ('unique_count', models.PositiveIntegerField(default=0, verbose_name='Уникальных')),
                ('promo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.promocode', verbose_name='Промокод')),
                ('showcase', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.showcase', verbose_name='Витрина')),
                ('store', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.store', verbose_name='Магазин')),
            ],
            options={
                'verbose_name': 'Агрегат по дням',
                'verbose_name_plural': 'Агрегаты по дням',
                'indexes': [models.Index(fields=['date', 'event_type'], name='core_dailya_date_6661f8_idx')],
                'unique_together': {('date', 'event_type', 'promo', 'store', 'showcase')},
            },
        ),
    ]
